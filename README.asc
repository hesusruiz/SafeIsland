= SafeIsland
:encoding: utf-8
:lang: en
:toc: left
:author: Jesus Ruiz
:email: hesus.ruiz@gmail.com
:revnumber: 0.2
:revdate: 19-12-2020
:numbered:
:imagesdir: images
:icons: font
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
:3dots: ...

(Version: {revnumber}, Version Date: {revdate})

This is a generic digital credential system which is designed to be secure, privacy-preserving, scalable, performant and robust. It is designed specifically for some important use cases where physical, on-person verification of credentials are needed and where normal W3C Verifiable Credential flows are not fully suitable as they are designed currently.

== General description of the system

=== Main actors in the system

The main actors are the following:

User:: This is the natural person that receives a credential and may present it when needed.

Issuer Entity:: The juridical person that digitally signs and issues a credential to the User. We assume that this operation is actually performed by a natural person that is employed by the Issuer, called the Issuer Operator.

Issuer Operator:: The natural person that is employed/subcontracted by the Issuer to actually drive the process of issuing the credential on behalf of the Issuer.

Verifier Entity:: A juridical person which is verifies the credential.

Verifier Person:: A natural person that verifies the credential. It is important to distinguish between natural and juridical persons in the verification process because the flows may be different as the regulatory implications may be different.

=== Main technical components

User mobile web app:: This is the application used by the end user to manage the credentials. The reference implementation is not a native application but rather a PWA (Progressive Web App), which can be used either as a normal web app (without installation) or it can be installed and used in a very similar way to a native mobile app. The characteristics of this app are explained later.

Issuer Operator mobile web app:: This is the application used by the natural person that drives the issuance of the credential. The application allows the operator to enter the details of the user an of the credential and issues the credential to the user on behalf of the Issuer Entity. It is the responsibility of the Issuer Entity to ensure that the Operator performs the process in the right way.

Verifier mobile web app:: The application used to verify the credential presented by the user. The reference application ca be used either by an employee of a Verifier Entity or by an individual natural person.

Public-Permissioned blockchain network:: This is a general-purpose blockchain network which is used to implement the Trust Framework allowing the efficieent and secure verification of credentials.

=== Main credential flow

---
image::RapidTest_Architecture-Operation.png[]
---

(1) Verification of User and Credential issuance::
+
The Issuer Operator identifies the User (in the same way as an airline employee identifies passengers before boarding a plane) and uses her mobile app to enter the details of the User. In the initial implementation of the system the operator has also to enter manually the details of the Credential to be issued. It is the responsibility of the Issuer Operator (and ultimately of the Issuer Entity) to ensure the veracity of both the User details and the Credential details. This is a critical point in the system, as the level of trust in the credentials will depend on the level of trust of the issuance process.

(2) Sending the Credential to the User::
+
The Credential is sent to the User. There are several possible flows. The main one is the following:

1. The Issuer Operator displays the credential for the User in her mobile phone screen, in a QR format. More detaisl about the specific QR format later.
2. The User scans the QR using her mobile web app.
3. The mobile web app of the User gets the Credential and stores it in the mobile storage.

(3) Store the Credential::
The Credential is stored in the mobile phone of the User. In the reference implementation it is stored in the IndexedDB local database. More details are given later in this document.

(4) Present the Credential::
When the User has to proof something, she sends the Credential to the Verifier. As before, there are several possible flows, the mein one being:
+
1. The User display the Credential in her mobile phone in QR format.
2. The Verifier scans the QR from the User mobile screen
3. The mobile app from the Verifier receives the Credential and verifies it.

(5) Verify the Credential using the Trust Framewok in the blockchain::
The Verifier mobile app verifies formally the Credential with the signature, and then checks that the signature of the Credential corresponds to an authorized Issuer Entity registered in the Trust Framework in the blockchain. The verification process is essentially the one described in the W3C VC specifications.


== The Trust Framework: bootstrapping the system

Before the issuance of credentials can take place, the system has to be bootstrapped and setup. In general, there is a one-time process that has to be performed only once at the beginning, and processess that have to be performed each time a new Issuer Entity or Verifier Entity enters or leaves the system. The overall processes are the following.

=== Public-Permissioned blockchain network: Alastria Red T

The system requires at least one https://github.com/hesusruiz/PublicPermissionedBlockchain[Public-Permissioned] blockchain network as https://github.com/alastria/alastria-node[Alastria Red T]. The network should be trusted, efficient, publicly available and compliant with all applicable regulations.

The system is designed to be easily interoperable with other Public-Permissioned blockchain networks, like LACChain or EBSI. This is described in detail in the appropriate section of this document.

=== Information in the blockchain

No personal information is ever recorded on the blockchain. The blockchain is only used  to register the identities of the legal persons involved in the system. The information recorded includes:

- Public identification information of the legal entity in the current regulatory environment, like VAT number, LEI (https://www.gleif.org[Legal Entity Identifier]), or any legally accepted identification in the countries participating in the system.

- Some commercial information, like the web site

- The public key used to verify the VCs digitally signed by the legal entity

The diagram below shows the registration of a new Issuer Entity in the blockchain. There are two type sof legal entities registered in the blockchain:

1. *Issuer Entity*: a legal entity has to be properly registered before it can issue any credential that can be verified by other actors in the system.

2. *Verifier Entity*: a legal entity that receives and verifies credentials from natural persons has to be registered in the blockchain. When the legal entity receives the credential (which includes personal data), this fact is registered in order to enhance auditability of the system later. This registration is performed in a privacy-preserving and scalable way. The process is described in detail later in this document. Natural persons can also verify credentials, but the verification process is different in order to avoid pre-registration of natural persons. This is described in detail later.

---
image::RapidTest_Architecture.png[]
---

=== Trust Framework: trusted registration process of legal entities


---
image::SafeIsland_TrustFramework.png[]
---


== SafeIsland Verifiable Credentials

=== W3C VC compatibility and extensions to AlastriaID

=== ELSI: a novel DID Method for legal entities

=== Extensions for interoperability with other networks

== Interoperability

=== Other DID methods

=== Other blockchain networks

=== Different credential types
