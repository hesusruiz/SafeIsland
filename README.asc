= SafeIsland
:encoding: utf-8
:lang: en
:toc: left
:author: Jesus Ruiz
:email: hesus.ruiz@gmail.com
:revnumber: 0.3
:revdate: 17-01-2021
:numbered:
:imagesdir: images
:icons: font
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
:3dots: ...

(Version: {revnumber}, Version Date: {revdate})

This is a generic digital credential system which is designed to be secure, privacy-preserving, scalable, performant and robust. It is designed specifically for some important use cases where physical, on-person verification of identity of holder is needed and where normal W3C Verifiable Credential flows are not fully suitable as they are normally designed currently.

== Requirements


REQ_ISSUANCE::
The system allows an Issuer Entity (a juridical person) to issue a digital Verifiable Credential (VC) to a natural person (Citizen) stating a fact about something in the real world related to that natural person. For example, that the person took a Covid19 test and the test result was negative.

REQ_ONBOARDING::
The issuance of the VC can be "on the spot" and while the Citizen is physically present. That is, the Citizen does not have to be pre-registered in any system or be a customer of the Issuer Entity before the issuance of the VC starts. For example, the Citizen can take a Covid19 test in some place and the Issuer Entity can issue the credential during the process, without the Citizen having any previous relation with the Issuer Entity.

REQ_ISSUER_RESPONSIBILITY::
The Issuer Entity is accountable for the veracity of the fact that is attested about the Citizen. 


[[REQ_PERS_DATA]]
REQ_PERS_DATA::
No personal data should ever be stored in the blockchain. Any personal data management should be performed off-chain by well-identified legal entities that have to comply with all applicable regulations, including GDPR.

[[REQ_PERS_IDS]]
REQ_PERS_IDS::
No digital identities of natural persons should ever be registered in the blockchain. This requirement is related to <<REQ_PERS_DATA>>, but is not exactly the same. This requirement says that no Digital Identity of a natural person should be registered in the blockchain using any mechanism *even if the mechanism claims that the data stored is not personal data*. This requirement tries to avoid any risk related to the blockchain and personal data, especially when a proper PIA (Privacy Impact Assessment) has not been performed, and there is not yet a general consensus among the data protection agencies in the EU about the subject.





== General description of the system

=== Main components

---
.Components of the system
image::SafeIsland_Components.png[]
---

The main components are the following:

Issuer Operator:: The natural person that is employed/subcontracted by the Issuer Entity to actually drive the process of issuing the credential on behalf of the Issuer Entity.

Issuer Operator App:: This is the application used by the natural person that drives the issuance of the credential. The application allows the operator to enter the details of the user and of the credential and issues the credential to the user on behalf of the Issuer Entity. It is the responsibility of the Issuer Entity to ensure that the Operator performs the process in the right way.

Citizen:: This is the natural person that receives a credential and may present it when needed.

Citizen mobile WebApp:: This is the application used by the end user to manage the credentials. The reference implementation is not a native application but rather a PWA (Progressive Web App), which can be used either as a normal web app (without installation) or it can be installed and used in a very similar way to a native mobile app. The characteristics of this app are explained later.

Verifier Person:: A natural person that verifies the credential. It is important to distinguish between natural and juridical persons in the verification process because the flows may be different as the regulatory implications may be different. The diagram does not explicitly mention the Verifier Person, but it will be described in detail later in the document.

Verifier App:: The application used to verify the credential presented by the user. The reference application can be used either by an employee of a Verifier Entity or by an individual natural person, as explained later.

Issuer Entity:: The juridical person that digitally signs and issues a credential to the User. The Issuer Entity employs or subcontracts the actual people performing the process, called Issuer Operator in the diagram. The Issuer Entity assumes full responsibility for the legal implications of the issueance process, especially GDPR compliance. The Issuer Entity acts as a Data Controller with respect to the Personal Information collected from the Citizen when the certification is issued.

Verifier Entity:: A juridical person that verifies the credential. In the process of verification, the Verifier Entity receives personal data from the Citizen. The Verifier Entity is responsible for compliance of all applicable regulations, including GDPR.

Public-Permissioned blockchain network:: This is a general-purpose blockchain network which is used to implement the Trust Framework allowing the efficient and secure verification of credentials. It is never used to store personal information. Personal information management is the responsibility of the legal entities Issuer Entity and Verifier Entity, and they are responsible for compliance to applicable regulations, especially GDPR. There may be more than one blockchain network, and the system is very interoperable across networks. The specific interoperability features are describer in a specific section later in this document.

=== Main credential flow

---
.Main credential flow
image::RapidTest_Architecture-Operation.png[]
---

(1) Verification of User and Credential issuance::
+
The Issuer Operator identifies the User (in the same way as an airline employee identifies passengers before boarding a plane) and uses her mobile app to enter the details of the User. In the initial implementation of the system the operator has also to enter manually the details of the Credential to be issued. It is the responsibility of the Issuer Operator (and ultimately of the Issuer Entity) to ensure the veracity of both the User details and the Credential details. This is a critical point in the system, as the level of trust in the credentials will depend on the level of trust of the issuance process.

(2) Sending the Credential to the Citizen::
+
The Credential is sent to the User. There are several possible flows, using different channels (email, QR, etc.). The main one is using QR codes and is the following:

1. The Issuer Operator displays the credential for the User in her mobile phone screen, in a QR format. More detaisl about the specific QR format later.
2. The User scans the QR using her mobile web app.
3. The mobile web app of the User gets the Credential and stores it in the storage of the mobile device.

(3) Store the Credential::
The Credential is stored in the mobile phone of the User. In the reference implementation it is stored in the IndexedDB local database. More than one credential can be stored in the mobile. A Citizen could for example store credentials of other persons of the family when traveling, or a history track of credentials received during a vacation. More details are given later in this document.

(4) Present the Credential::
When the Citizen has to prove something, she sends the Credential to the Verifier. As before, there are several possible flows, the main one using QR codes:
+
1. The User display the Credential in her mobile phone in QR format.
2. The Verifier scans the QR from the User mobile screen
3. The mobile app from the Verifier receives the Credential and verifies it.

(5) Verify the Credential using the Trust Framework in the blockchain::
The Verifier mobile app verifies formally the Credential with the signature, and then checks that the signature of the Credential corresponds to an authorized Issuer Entity registered in the Trust Framework in the blockchain. The verification process is essentially the one described in the W3C VC specifications.


== The Trust Framework: bootstrapping the system

Before the issuance of credentials can take place, the system has to be bootstrapped and setup. There are two processes that have to be performed:

1. A One-time process at the beginning of the whole system: involves things like deploying Smart Contracts and initializing them with the parameters of the system.

2. A process for the onboarding of each new Issuer Entity and Verifier Entity. This process is basically generating and registering n the blockchain the Identity of the entity entering the system.

=== Public-Permissioned blockchain network: Alastria Red T

The system requires at least one https://github.com/hesusruiz/PublicPermissionedBlockchain[Public-Permissioned] blockchain network as https://github.com/alastria/alastria-node[Alastria Red T]. The network should be trusted, efficient, publicly available and compliant with all applicable regulations.

The system is designed to be easily interoperable with other Public-Permissioned blockchain networks, like LACChain or EBSI. This is described in detail in the appropriate section of this document.

=== Information in the blockchain and Personal Identifiable Information (PII)

*No personal information is ever recorded on the blockchain*. The blockchain is only used  to register the identities of the legal persons involved in the system. The information recorded for businesses and organizations includes:

- Public identification information of the legal person in the current regulatory environment, like VAT number, LEI (https://www.gleif.org[Legal Entity Identifier]), or any legally accepted identification in the countries participating in the system.

- Some commercial information, like the web site

- The public key used to verify the Verifiable Credentials digitally signed by the legal entity

The diagram below shows the registration of a new Issuer Entity in the blockchain. There are two types of legal persons registered in the blockchain:

1. *Issuer Entity*: a legal person has to be properly registered before it can issue any credential that can be verified by other actors in the system.

2. *Verifier Entity*: a legal person that receives and verifies credentials from natural persons has to be registered in the blockchain. When the legal person receives the credential (which includes personal data), this fact is registered in order to enhance auditability of the system later. This registration is performed in a privacy-preserving and scalable way. The process is described in detail later in this document. Natural persons can also verify credentials, but the verification process is different in order to avoid pre-registration of natural persons. This is described in detail later.

---
.Trusted Registry of Legal Entities in the blockchain
image::RapidTest_Architecture.png[]
---

=== Trust Framework: trusted registration process of legal entities

---
.The Trust Framework in the blockchain
image::SafeIsland_TrustFramework.png[]
---


== Credential flows

=== Credential issuance

---
.Credential Issuance
image::SafeIsland_CredentialIssuance.png[]
---

The credential issuance process is the following:

*Obtain Informed Consent from the Citizen*

- At the beginning of the interaction, the Citizen has to be identified in person by the Issuer Operator, using whatever legally identification mechanisms are required in the country and for the issuance of the credential. For example with National ID, Passport, Drivers License, etc. The Citizen has to provide an explicit informed consent for the provisoon and specific usage of her personal data, as required by the GDPR. The Issuer Entity becomes the Data Controller, in GDPR terminology. As mentioned before, this process requires physical presence of the Citizen.

*Credential generation*

- The Issuer Operator enters the data of the Citizen in the system, together with the data which will go in the Credential. In the case of a Covid test which was negative, this data will be the result, type of test, date, etc.

- The system stores the information and generates a credential in the standard W3C Verifiable Credential format.

- The system then generates a QR code displayed in the Issuer Operator device that will be scanned by the Citizen to receive the Credential.

- The system uses the standard W3C Verdifiable Credential format, and in general the amount of data in those credentials is too big to fit in a single QR. To overcome this limitation, the system uses an efficient and privacy-preserving mechanims:

-- The Verifiable Credential is split into two parts: one with the PII information and another one with the non-PII data (the credential data which is exactly the same for all credentials of that type issued to all Citizens). The PII data is in general very small and fits perfectly in a QR.

-- The QR is created with the PII and a URL pointing to a location where the non-PII credential data is stored.

-- The Citizen mobile webapp scans the QR and uses the URL inside it to automatically retrieve the non-PII credential data. Then it merges the non-PII data with the PII data received directly from the QR to build the full Verifiable Credential and store it in the mobile storage.

This process is described in detail later in this document.


=== Credential verification

---
.Credential Verification
image::SafeIsland_CredentialPresentation.png[]
---

== SafeIsland Verifiable Credentials

=== W3C VC compatibility and extensions to AlastriaID

---
.W3C Verifiable Credential and extensions
image::SafeIsland_VCSample.png[]
---
.Covid Credential inside the W3C VC
image::SafeIsland_VCSample2.png[]
---

=== ELSI: a novel DID Method for legal entities

The system supports several DID Methods, using the Universal Resolver to resolve each DID into a corresponding DID Document.
But the main DID Method used for legal persons, anchored into Red T, is *ELSI*: `did:elsi`.

The name ELSI stands for (**E**)TSI (**L**)egal person (**S**)emantics (**I**)dentifier, and corresponds to the information that should be included in the _organizationIdentifier_ attribute as described in the European Norm ETSI EN 319 412-1, related to digital signatures, peer entity authentication, data authentication as well as data confidentiality.

The structure of the DID (after the initial "did:elsi:" prefix) is:

- 3 character legal person identity type reference;
- 2 character ISO 3166 [2] country code;
- hyphen-minus "-" (0x2D (ASCII), U+002D (UTF-8)); and
- identifier (according to country and identity type reference).

For the three initial characters we support the following options:

- "VAT" for identification based on a national value added tax identification number.
- "LEI" for the https://www.gleif.org[Legal Entity Identifier]

Some examples of DIDs are the following:

.Example DIDs
[cols="2,4",options=header]
|=================================================================================
| Name                                           | DID                           
|BME Holding (www.bolsasymercados.es)            |*did:elsi:VATES-A83246314*     
|IN2 (www.ins.es)                                |*did:elsi:VATES-B60645900*     
|AENA (www.aena.es)                              |*did:elsi:VATES-A86212420*     
|Inter-American Development Bank (www.iadb.org)  |*did:elsi:LEIUS-VKU1UKDS9E7LYLMACP54*   
|=================================================================================


=== Extensions for interoperability with other networks

== Interoperability

=== Other DID methods

=== Other blockchain networks

=== Different credential types
